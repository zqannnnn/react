cache:
  key: "$CI_BUILD_REF_NAME node:8-alpine"
  paths:
    - node_modules/

stages:
  - deploy

deploy:
  stage: deploy
  image: gitlab/dind:latest
  only:
    - "prod-config1"
  environment: production
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
    - rm ./Dockerfile 
    - mv ./Dockerfile.prod ./Dockerfile    
    - rm ./bin/yarn 
    - mv ./bin/yarn.prod ./bin/yarn     
    - rm ./docker-compose.yml
    - mv ./docker-compose.prod.yml ./docker-compose.yml    
  script:
    - scp -r ./Dockerfile ./bin ./src ./frontend ./public root@${DEPLOYMENT_SERVER_IP}:/opt/projects/bmp
    - scp -r ./production.env root@${DEPLOYMENT_SERVER_IP}:/opt/projects/bmp
    - scp -r ./docker-compose.yml ./package.json ./tslint.json ./package-lock.json ./tsconfig.json root@${DEPLOYMENT_SERVER_IP}:/opt/projects/bmp
    - scp -r ./i18next-scanner-backend.config.js ./i18next-scanner.config.js ./webpack.common.js ./webpack.prod.js ./yarn.lock root@${DEPLOYMENT_SERVER_IP}:/opt/projects/bmp
    - ssh root@$DEPLOYMENT_SERVER_IP "cd /opt/projects/bmp; docker-compose -f docker-compose.yml down;"
    - ssh root@$DEPLOYMENT_SERVER_IP "cd /opt/projects/bmp; mkdir node_modules; chmod -R 777 node_modules; mkdir uploads; chmod -R 777 uploads;"
    - ssh root@$DEPLOYMENT_SERVER_IP "cd /opt/projects/bmp; ./bin/yarn install;"
    - ssh root@$DEPLOYMENT_SERVER_IP "cd /opt/projects/bmp; docker-compose -f docker-compose.yml build; docker-compose -f docker-compose.yml up -d;"